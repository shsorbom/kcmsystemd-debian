From a8c2bcdd1da51f418f2d347f69c8a540c77b8acd Mon Sep 17 00:00:00 2001
From: Ragnar Thomsen <rthomsen6@gmail.com>
Date: Sun, 9 Aug 2015 12:54:05 +0200
Subject: [PATCH 06/17] Use const-ref in foreach loops

As suggested by Krazy2.
---
 src/confoption.cpp |  5 +++--
 src/confparms.cpp  |  6 +++---
 src/kcmsystemd.cpp | 18 +++++++++---------
 3 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/src/confoption.cpp b/src/confoption.cpp
index ef0e8eb..b8021d1 100644
--- a/src/confoption.cpp
+++ b/src/confoption.cpp
@@ -74,10 +74,11 @@ confOption::confOption(QVariantMap map)
 
   if (type == MULTILIST)
   {
-    // Create a map where all possibleVals are set to false
+    // Create a map where all possibleVals are set to false.
     QVariantMap defMap;
-    foreach (QString s, possibleVals)
+    foreach (const QString &s, possibleVals) {
       defMap[s] = false;
+    }
     defVal = defMap;
   }
   if (type == RESLIMIT)
diff --git a/src/confparms.cpp b/src/confparms.cpp
index 71ffb2c..cbd1b16 100644
--- a/src/confparms.cpp
+++ b/src/confparms.cpp
@@ -303,7 +303,7 @@ QList<confOption> getConfigParms(const int systemdVersion)
                                         << "DefaultLimitMEMLOCK" << "DefaultLimitLOCKS" << "DefaultLimitSIGPENDING"
                                         << "DefaultLimitMSGQUEUE" << "DefaultLimitNICE" << "DefaultLimitRTPRIO"
                                         << "DefaultLimitRTTIME";
-  foreach (QString s, resLimits)
+  foreach (const QString &s, resLimits)
   {
     map.clear();
     map["name"] = s;
@@ -502,7 +502,7 @@ QList<confOption> getConfigParms(const int systemdVersion)
   if (systemdVersion >= 212)
     listLogLevel << "MaxLevelWall";
 
-  foreach (QString s, listLogLevel)
+  foreach (const QString &s, listLogLevel)
   {
     map.clear();
     map["name"] = s;
@@ -579,7 +579,7 @@ QList<confOption> getConfigParms(const int systemdVersion)
                                            << "HandleHibernateKey" << "HandleLidSwitch";
   if (systemdVersion >= 217)
     listPower << "HandleLidSwitchDocked";
-  foreach (QString s, listPower)
+  foreach (const QString &s, listPower)
   {
     map.clear();
     map["name"] = s;
diff --git a/src/kcmsystemd.cpp b/src/kcmsystemd.cpp
index f521831..4fd00d4 100644
--- a/src/kcmsystemd.cpp
+++ b/src/kcmsystemd.cpp
@@ -428,7 +428,7 @@ void kcmsystemd::save()
   QString systemConfFileContents;
   systemConfFileContents.append("# " + etcDir + "/system.conf\n# Generated by kcmsystemd control module v" + SYSTEMD_KCM_VERSION + ".\n");
   systemConfFileContents.append("[Manager]\n");
-  foreach (confOption i, confOptList)
+  foreach (const confOption &i, confOptList)
   {
     if (i.file == SYSTEMD)
       systemConfFileContents.append(i.getLineForFile());
@@ -437,7 +437,7 @@ void kcmsystemd::save()
   QString journaldConfFileContents;
   journaldConfFileContents.append("# " + etcDir + "/journald.conf\n# Generated by kcmsystemd control module v" + SYSTEMD_KCM_VERSION + ".\n");
   journaldConfFileContents.append("[Journal]\n");
-  foreach (confOption i, confOptList)
+  foreach (const confOption &i, confOptList)
   {
     if (i.file == JOURNALD)
       journaldConfFileContents.append(i.getLineForFile());
@@ -446,7 +446,7 @@ void kcmsystemd::save()
   QString logindConfFileContents;
   logindConfFileContents.append("# " + etcDir + "/logind.conf\n# Generated by kcmsystemd control module v" + SYSTEMD_KCM_VERSION + ".\n");
   logindConfFileContents.append("[Login]\n");
-  foreach (confOption i, confOptList)
+  foreach (const confOption &i, confOptList)
   {
     if (i.file == LOGIND)
       logindConfFileContents.append(i.getLineForFile());
@@ -455,7 +455,7 @@ void kcmsystemd::save()
   QString coredumpConfFileContents;
   coredumpConfFileContents.append("# " + etcDir + "/coredump.conf\n# Generated by kcmsystemd control module v" + SYSTEMD_KCM_VERSION + ".\n");
   coredumpConfFileContents.append("[Coredump]\n");
-  foreach (confOption i, confOptList)
+  foreach (const confOption &i, confOptList)
   {
     if (i.file == COREDUMP)
       coredumpConfFileContents.append(i.getLineForFile());
@@ -582,7 +582,7 @@ void kcmsystemd::slotRefreshUnitsList(bool initial, dbusBus bus)
     unitslist.clear();
     unitslist = getUnitsFromDbus(sys);
     noActSystemUnits = 0;
-    foreach (SystemdUnit unit, unitslist)
+    foreach (const SystemdUnit &unit, unitslist)
     {
       if (unit.active_state == "active")
         noActSystemUnits++;
@@ -604,7 +604,7 @@ void kcmsystemd::slotRefreshUnitsList(bool initial, dbusBus bus)
     userUnitslist.clear();
     userUnitslist = getUnitsFromDbus(user);
     noActUserUnits = 0;
-    foreach (SystemdUnit unit, userUnitslist)
+    foreach (const SystemdUnit &unit, userUnitslist)
     {
       if (unit.active_state == "active")
         noActUserUnits++;
@@ -685,7 +685,7 @@ void kcmsystemd::slotRefreshSessionList()
       }
     }
     // Delete the identified units from model
-    foreach (QPersistentModelIndex i, indexes)
+    foreach (const QPersistentModelIndex &i, indexes)
       sessionModel->removeRow(i.row());
   }
 
@@ -715,14 +715,14 @@ void kcmsystemd::slotRefreshTimerList()
   timerModel->removeRows(0, timerModel->rowCount());
 
   // Iterate through system unitlist and add timers to the model
-  foreach (SystemdUnit unit, unitslist)
+  foreach (const SystemdUnit &unit, unitslist)
   {
     if (unit.id.endsWith(".timer") && unit.load_state != "unloaded")
       timerModel->appendRow(buildTimerListRow(unit, unitslist, sys));
   }
 
   // Iterate through user unitlist and add timers to the model
-  foreach (SystemdUnit unit, userUnitslist)
+  foreach (const SystemdUnit &unit, userUnitslist)
   {
     if (unit.id.endsWith(".timer") && unit.load_state != "unloaded")
       timerModel->appendRow(buildTimerListRow(unit, userUnitslist, user));
-- 
2.1.4

